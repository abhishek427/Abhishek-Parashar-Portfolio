[{"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js":"1","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js":"2","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js":"3","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js":"4","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js":"5","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js":"6","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js":"7","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js":"8","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js":"9","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/Test.js":"10","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/Form.js":"11"},{"size":500,"mtime":1622111070152,"results":"12","hashOfConfig":"13"},{"size":1350,"mtime":1623575940490,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1622111070152,"results":"15","hashOfConfig":"13"},{"size":2728,"mtime":1622464108295,"results":"16","hashOfConfig":"13"},{"size":2131,"mtime":1623056093030,"results":"17","hashOfConfig":"13"},{"size":2110,"mtime":1622722206689,"results":"18","hashOfConfig":"13"},{"size":3149,"mtime":1624792250685,"results":"19","hashOfConfig":"13"},{"size":1942,"mtime":1622965825162,"results":"20","hashOfConfig":"13"},{"size":418,"mtime":1623325817690,"results":"21","hashOfConfig":"13"},{"size":427,"mtime":1623575441494,"results":"22","hashOfConfig":"13"},{"size":5864,"mtime":1624792426487,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jv3fe5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js",[],["48","49"],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/Test.js",["50","51","52"],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/Form.js",["53","54"],"import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport emailjs from \"emailjs-com\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { Button } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nfunction Form() {\n  const [open, setOpen] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [email] = useState(\"\");\n  const [liveValidationStart] = useState(false);\n  const [flag, setFlag] = useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    if (validateForm() === false) {\n      setFlag(true);\n      emailjs.sendForm(\"service_yjjgv3v\", \"template_yja62ud\", e.target, process.env.REACT_APP_DATA_ENV).then(\n        (result) => {\n          handleClickOpen();\n          setFlag(false);\n          console.log(result);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n    }\n  }\n\n  const validateForm = () => {\n    let errorValue = false;\n    let errors = {};\n    let requireFields = [\"name\", \"email\", \"subject\", \"msg\"];\n    let emailFields = [\"email\"];\n\n    requireFields.forEach((field, index) => {\n      if (document.getElementById(field) !== null) {\n        let value;\n        if (document.getElementById(field).value !== undefined) {\n          value = document.getElementById(field).value;\n        } else {\n          value = document.getElementById(field).innerHTML;\n          if (value === \"<span>â€‹</span>\") {\n            value = -1;\n          }\n        }\n        if (value.length < 1 || value === -1) {\n          errors[field] = \"*This field is required\";\n        } else if (emailFields.indexOf(field) !== -1 && !value.match(/^[\\w\\.=-]+@[\\w\\.-]+\\.[\\w]{2,3}$/)) {\n          errors[field] = \"*This field should be a valid email\";\n        } else if (email != null) {\n        }\n        if (errorValue === false) {\n        }\n      }\n    });\n    setErrors(errors);\n\n    return Object.keys(errors).length > 0 ? true : false;\n  };\n  const validate = () => {\n    if (liveValidationStart === false) {\n      validateForm();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"contact-form\" onSubmit={sendEmail}>\n        <div className=\"nameEmailContainer\">\n          <div className=\"nameContainer\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Enter your name...\"\n              className={errors[\"name\"] ? \"errorClass\" : \"\"}\n              onChange={(e) => {\n                validate();\n              }}\n            />\n            <small>{errors[\"name\"]}</small>\n          </div>\n          <div className=\"emailContainer\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email...\"\n              id=\"email\"\n              className={errors[\"email\"] ? \"errorClass\" : \"\"}\n              onChange={(e) => {\n                validate();\n              }}\n            />\n            <small>{errors[\"email\"]}</small>\n          </div>\n        </div>\n        <label>Subject</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          placeholder=\"Enter the subject of this message...\"\n          id=\"subject\"\n          className={errors[\"subject\"] ? \"errorClass\" : \"\"}\n          onChange={(e) => {\n            validate();\n          }}\n        />\n        <small>{errors[\"subject\"]}</small>\n        <div className=\"messageContainer\">\n          <label>Message</label>\n          <input\n            type=\"text\"\n            name=\"message\"\n            id=\"msg\"\n            className={errors[\"msg\"] ? \"errorClass\" : \"\"}\n            onChange={(e) => {\n              validate();\n            }}\n          />\n          <small>{errors[\"msg\"]}</small>\n        </div>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"large\">\n          <strong>Send message</strong>\n        </Button>\n      </form>\n      {flag === true ? (\n        <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\n          <CircularProgress color=\"secondary\" />\n        </Dialog>\n      ) : (\n        <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <DialogTitle id=\"alert-dialog-slide-title\">\n                <div className=\"dialog-contant\">Thank You for Messaging me</div>\n                <div className=\"dialog-contant\">\n                  <InsertEmoticonIcon className=\"icon-style\" />\n                </div>\n              </DialogTitle>\n            </Grid>\n            <Grid item xs={12}>\n              <div className=\"dialog-contant\">\n                <p>I will contact you shortly.</p>\n              </div>\n            </Grid>\n          </Grid>\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n              <strong>Okay</strong>\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n}\n\nexport default Form;\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":2,"message":"60","line":7,"column":10,"nodeType":"61","messageId":"62","endLine":7,"endColumn":20},{"ruleId":"59","severity":2,"message":"63","line":8,"column":10,"nodeType":"61","messageId":"62","endLine":8,"endColumn":15},{"ruleId":"59","severity":2,"message":"64","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":68,"column":75,"nodeType":"67","messageId":"68","endLine":68,"endColumn":76,"suggestions":"69"},{"ruleId":"65","severity":1,"message":"66","line":68,"column":85,"nodeType":"67","messageId":"68","endLine":68,"endColumn":86,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react/jsx-no-undef","'InputLabel' is not defined.","JSXIdentifier","undefined","'Input' is not defined.","'FormHelperText' is not defined.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["73","74"],["75","76"],"no-global-assign","no-unsafe-negation",{"messageId":"77","fix":"78","desc":"79"},{"messageId":"80","fix":"81","desc":"82"},{"messageId":"77","fix":"83","desc":"79"},{"messageId":"80","fix":"84","desc":"82"},"removeEscape",{"range":"85","text":"86"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"87","text":"88"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"89","text":"86"},{"range":"90","text":"88"},[2184,2185],"",[2184,2184],"\\",[2194,2195],[2194,2194]]