[{"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js":"1","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js":"2","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js":"3","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js":"4","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js":"5","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js":"6","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js":"7","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js":"8","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js":"9","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/Test.js":"10","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/Form.js":"11"},{"size":500,"mtime":1622111070152,"results":"12","hashOfConfig":"13"},{"size":1350,"mtime":1623575940490,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1622111070152,"results":"15","hashOfConfig":"13"},{"size":2728,"mtime":1622464108295,"results":"16","hashOfConfig":"13"},{"size":2131,"mtime":1623056093030,"results":"17","hashOfConfig":"13"},{"size":2110,"mtime":1622722206689,"results":"18","hashOfConfig":"13"},{"size":10385,"mtime":1624696251521,"results":"19","hashOfConfig":"13"},{"size":1942,"mtime":1622965825162,"results":"20","hashOfConfig":"13"},{"size":418,"mtime":1623325817690,"results":"21","hashOfConfig":"13"},{"size":427,"mtime":1623575441494,"results":"22","hashOfConfig":"13"},{"size":5841,"mtime":1624781949853,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jv3fe5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js",[],["48","49"],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js",["50","51","52","53","54","55","56","57","58"],"import React, { useState } from \"react\";\nimport \"./ContactMe.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { Icon } from \"@iconify/react\";\nimport accountIcon from \"@iconify-icons/mdi/account\";\nimport mapMarkerRadius from \"@iconify-icons/mdi/map-marker-radius\";\nimport emailOutline from \"@iconify-icons/mdi/email-outline\";\nimport linkedinIcon from \"@iconify-icons/mdi/linkedin\";\nimport facebookIcon from \"@iconify-icons/mdi/facebook\";\nimport instagramIcon from \"@iconify-icons/mdi/instagram\";\nimport emailjs from \"emailjs-com\";\nimport Form from \"./Form\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nlet socialMediaData = [\n  { key: 1, icon: linkedinIcon, link: \"https://www.linkedin.com/in/abhishek-parashar-ba6b26a2/\" },\n  { key: 2, icon: facebookIcon, link: \"https://www.facebook.com/abhishek.parasar.505/\" },\n  { key: 3, icon: instagramIcon, link: \"https://www.instagram.com/parashar427/\" },\n];\nlet contactData = [\n  { key: 1, title: \"Name\", value: \"Abhishek Parashar\", icon: accountIcon },\n  { key: 2, title: \"Address\", value: \"Modinagar\", icon: mapMarkerRadius },\n  { key: 3, title: \"Email\", value: \"abhishek427821@gmail.com\", icon: emailOutline },\n];\nfunction ContactMe() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [liveValidationStart] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const validateForm = () => {\n    let errorValue = false;\n    let errors = {};\n    let requireFields = [\"name\", \"email\", \"subject\", \"msg\"];\n    let emailFields = [\"email\"];\n\n    requireFields.forEach((field, index) => {\n      if (document.getElementById(field) !== null) {\n        let value;\n        if (document.getElementById(field).value !== undefined) {\n          value = document.getElementById(field).value;\n        } else {\n          value = document.getElementById(field).innerHTML;\n          if (value === \"<span>â€‹</span>\") {\n            value = -1;\n          }\n        }\n        if (value.length < 1 || value === -1) {\n          errors[field] = \"This field is required\";\n        } else if (emailFields.indexOf(field) !== -1 && !value.match(/^[\\w\\.=-]+@[\\w\\.-]+\\.[\\w]{2,3}$/)) {\n          errors[field] = \"This field should be a valid email\";\n        } else if (email != null) {\n        }\n        if (errorValue === false) {\n        }\n      }\n    });\n    setErrors(errors);\n\n    return Object.keys(errors).length > 0 ? true : false;\n  };\n  const data = {\n    subject: subject,\n  };\n  const sentEmail = () => {\n    if (validateForm() === false) {\n      setName(\"\");\n      setEmail(\"\");\n      setSubject(\"\");\n      setMsg(\"\");\n      emailjs.sendForm(\"gmail\", \"template_yja62ud\", data, \"user_ASQa7rDR5ZuJgjmTWSHyR\").then(\n        (result) => {\n          console.log(result.text);\n          handleClickOpen();\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n    }\n  };\n  const validate = () => {\n    if (liveValidationStart === false) {\n      validateForm();\n    }\n  };\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs.sendForm(\"service_yjjgv3v\", \"template_yja62ud\", e.target, \"user_ASQa7rDR5ZuJgjmTWSHyR\").then(\n      (result) => {\n        console.log(result.text);\n        console.log(e.target, \"eee\");\n      },\n      (error) => {\n        console.log(error.text);\n      }\n    );\n  }\n  return (\n    <Paper elevation={3} className=\"paper-size\">\n      <Grid container justify=\"center\" spacing={3}>\n        <Grid item lg={12} md={12} sm={12} xs={12} className=\"heading-alignment heading-height\">\n          <Typography variant=\"h4\">Contact me</Typography>\n          <Typography className=\"primary-color\">get in touch</Typography>\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\">\n          <p className=\"section-heading\">Get in Touch</p>\n          <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dignissimos harum corporis fuga corrupti. Doloribus quis soluta nesciunt veritatis vitae nobis?</p>\n          {contactData.map((data) => {\n            return (\n              <Grid container alignItems=\"center\" className=\"contactData\" key={data.key}>\n                <Grid item xs={1}>\n                  <Icon icon={data.icon} className=\"contact-me-icons\" />\n                </Grid>\n                <Grid item xs={11}>\n                  <strong>{data.title}</strong>\n                  <p className=\"contact-value\">{data.value}</p>\n                </Grid>\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\">\n          <p className=\"section-heading\">Message Me</p>\n          <Form />\n          {/* <form className=\"contact-form\" onSubmit={sendEmail}>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"name\"\n                  name=\"name\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  required\n                  error={errors[\"name\"]}\n                  helperText={errors[\"name\"]}\n                  fullWidth\n                  autoComplete=\"name\"\n                  value={name}\n                  onChange={(event) => {\n                    setName(event.target.value);\n                    validate();\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  required\n                  error={errors[\"email\"]}\n                  helperText={errors[\"email\"]}\n                  fullWidth\n                  autoComplete=\"Email\"\n                  value={email}\n                  onChange={(event) => {\n                    setEmail(event.target.value);\n                    validate();\n                  }}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"subject\"\n                  name=\"subject\"\n                  label=\"Subject\"\n                  variant=\"outlined\"\n                  required\n                  error={errors[\"subject\"]}\n                  helperText={errors[\"subject\"]}\n                  fullWidth\n                  autoComplete=\"subject\"\n                  value={subject}\n                  onChange={(event) => {\n                    setSubject(event.target.value);\n                    validate();\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"msg\"\n                  name=\"message\"\n                  label=\"Message\"\n                  variant=\"outlined\"\n                  required\n                  error={errors[\"msg\"]}\n                  helperText={errors[\"msg\"]}\n                  fullWidth\n                  autoComplete=\"message\"\n                  value={msg}\n                  onChange={(event) => {\n                    setMsg(event.target.value);\n                    validate();\n                  }}\n                  multiline\n                  rows={4}\n                />\n              </Grid>\n              <Grid item={12} className=\"btn-contaner\">\n                <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={sentEmail}>\n                  <strong>Send message</strong>\n                </Button>\n              </Grid>\n            </Grid>\n          </form> */}\n        </Grid>\n\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\">\n          <div>\n            <strong>Follow me on </strong>\n          </div>\n          {socialMediaData.map((data) => {\n            return (\n              <a href={data.link} key={data.key} style={{ textDecoration: \"none\" }}>\n                {\" \"}\n                <Icon icon={data.icon} className=\"socal-media-icons\" />\n              </a>\n            );\n          })}\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\"></Grid>\n        {/* <Grid item xs={12}>\n          <form className=\"contact-form\" onSubmit={sendEmail}>\n            <input type=\"hidden\" name=\"contact_number\" />\n            <label>Name</label>\n            <input type=\"text\" name=\"user_name\" />\n            <label>Email</label>\n            <input type=\"email\" name=\"user_email\" />\n            <label>Message</label>\n            <textarea name=\"message\" />\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n        </Grid> */}\n      </Grid>\n      <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              <div className=\"dialog-contant\">Thank You for Messaging me</div>\n              <div className=\"dialog-contant\">\n                <InsertEmoticonIcon className=\"icon-style\" />\n              </div>\n            </DialogTitle>\n          </Grid>\n          <Grid item xs={12}>\n            <div className=\"dialog-contant\">\n              <p>I will contact you shortly.</p>\n            </div>\n          </Grid>\n        </Grid>\n        <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n            <strong>Okay</strong>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default ContactMe;\n","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/Test.js",["59","60","61"],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/Form.js",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":36,"column":10,"nodeType":"70","messageId":"71","endLine":36,"endColumn":14},{"ruleId":"68","severity":1,"message":"73","line":39,"column":10,"nodeType":"70","messageId":"71","endLine":39,"endColumn":13},{"ruleId":"68","severity":1,"message":"74","line":40,"column":10,"nodeType":"70","messageId":"71","endLine":40,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":71,"column":75,"nodeType":"77","messageId":"78","endLine":71,"endColumn":76,"suggestions":"79"},{"ruleId":"75","severity":1,"message":"76","line":71,"column":85,"nodeType":"77","messageId":"78","endLine":71,"endColumn":86,"suggestions":"80"},{"ruleId":"68","severity":1,"message":"81","line":86,"column":9,"nodeType":"70","messageId":"71","endLine":86,"endColumn":18},{"ruleId":"68","severity":1,"message":"82","line":103,"column":9,"nodeType":"70","messageId":"71","endLine":103,"endColumn":17},{"ruleId":"68","severity":1,"message":"83","line":109,"column":12,"nodeType":"70","messageId":"71","endLine":109,"endColumn":21},{"ruleId":"84","severity":2,"message":"85","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":20},{"ruleId":"84","severity":2,"message":"88","line":8,"column":10,"nodeType":"86","messageId":"87","endLine":8,"endColumn":15},{"ruleId":"84","severity":2,"message":"89","line":9,"column":10,"nodeType":"86","messageId":"87","endLine":9,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":68,"column":75,"nodeType":"77","messageId":"78","endLine":68,"endColumn":76,"suggestions":"90"},{"ruleId":"75","severity":1,"message":"76","line":68,"column":85,"nodeType":"77","messageId":"78","endLine":68,"endColumn":86,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'msg' is assigned a value but never used.","'errors' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["94","95"],["96","97"],"'sentEmail' is assigned a value but never used.","'validate' is assigned a value but never used.","'sendEmail' is defined but never used.","react/jsx-no-undef","'InputLabel' is not defined.","JSXIdentifier","undefined","'Input' is not defined.","'FormHelperText' is not defined.",["98","99"],["100","101"],"no-global-assign","no-unsafe-negation",{"messageId":"102","fix":"103","desc":"104"},{"messageId":"105","fix":"106","desc":"107"},{"messageId":"102","fix":"108","desc":"104"},{"messageId":"105","fix":"109","desc":"107"},{"messageId":"102","fix":"110","desc":"104"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"102","fix":"112","desc":"104"},{"messageId":"105","fix":"113","desc":"107"},"removeEscape",{"range":"114","text":"115"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"116","text":"117"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"118","text":"115"},{"range":"119","text":"117"},{"range":"120","text":"115"},{"range":"121","text":"117"},{"range":"122","text":"115"},{"range":"123","text":"117"},[2927,2928],"",[2927,2927],"\\",[2937,2938],[2937,2937],[2182,2183],[2182,2182],[2192,2193],[2192,2192]]