[{"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js":"1","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js":"2","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js":"3","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js":"4","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js":"5","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js":"6","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js":"7","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js":"8","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js":"9"},{"size":500,"mtime":1622111070152,"results":"10","hashOfConfig":"11"},{"size":1298,"mtime":1622966544439,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1622111070152,"results":"13","hashOfConfig":"11"},{"size":2728,"mtime":1622464108295,"results":"14","hashOfConfig":"11"},{"size":2131,"mtime":1623056093030,"results":"15","hashOfConfig":"11"},{"size":2110,"mtime":1622722206689,"results":"16","hashOfConfig":"11"},{"size":8847,"mtime":1623054263209,"results":"17","hashOfConfig":"11"},{"size":1942,"mtime":1622965825162,"results":"18","hashOfConfig":"11"},{"size":418,"mtime":1623325817690,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jv3fe5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js",[],["40","41"],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js",["42","43"],"import React, { useState } from \"react\";\nimport \"./ContactMe.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { Icon } from \"@iconify/react\";\nimport accountIcon from \"@iconify-icons/mdi/account\";\nimport mapMarkerRadius from \"@iconify-icons/mdi/map-marker-radius\";\nimport emailOutline from \"@iconify-icons/mdi/email-outline\";\nimport linkedinIcon from \"@iconify-icons/mdi/linkedin\";\nimport facebookIcon from \"@iconify-icons/mdi/facebook\";\nimport instagramIcon from \"@iconify-icons/mdi/instagram\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nlet socialMediaData = [\n  { key: 1, icon: linkedinIcon, link: \"https://www.linkedin.com/in/abhishek-parashar-ba6b26a2/\" },\n  { key: 2, icon: facebookIcon, link: \"https://www.facebook.com/abhishek.parasar.505/\" },\n  { key: 3, icon: instagramIcon, link: \"https://www.instagram.com/parashar427/\" },\n];\nlet contactData = [\n  { key: 1, title: \"Name\", value: \"Abhishek Parashar\", icon: accountIcon },\n  { key: 2, title: \"Address\", value: \"Modinagar\", icon: mapMarkerRadius },\n  { key: 3, title: \"Email\", value: \"abhishek427821@gmail.com\", icon: emailOutline },\n];\nfunction ContactMe() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [liveValidationStart] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const validateForm = () => {\n    let errorValue = false;\n    let errors = {};\n    let requireFields = [\"name\", \"email\", \"subject\", \"msg\"];\n    let emailFields = [\"email\"];\n\n    requireFields.forEach((field, index) => {\n      if (document.getElementById(field) !== null) {\n        let value;\n        if (document.getElementById(field).value !== undefined) {\n          value = document.getElementById(field).value;\n        } else {\n          value = document.getElementById(field).innerHTML;\n          if (value === \"<span>â€‹</span>\") {\n            value = -1;\n          }\n        }\n        if (value.length < 1 || value === -1) {\n          errors[field] = \"This field is required\";\n        } else if (emailFields.indexOf(field) !== -1 && !value.match(/^[\\w\\.=-]+@[\\w\\.-]+\\.[\\w]{2,3}$/)) {\n          errors[field] = \"This field should be a valid email\";\n        } else if (email != null) {\n        }\n        if (errorValue === false) {\n        }\n      }\n    });\n    setErrors(errors);\n\n    return Object.keys(errors).length > 0 ? true : false;\n  };\n\n  const saveTeacherData = () => {\n    if (validateForm() === false) {\n      handleClickOpen();\n      setName(\"\");\n      setEmail(\"\");\n      setSubject(\"\");\n      setMsg(\"\");\n    }\n  };\n  const validate = () => {\n    if (liveValidationStart === false) {\n      validateForm();\n    }\n  };\n  return (\n    <Paper elevation={3} className=\"paper-size\">\n      <Grid container justify=\"center\" spacing={3}>\n        <Grid item lg={12} md={12} sm={12} xs={12} className=\"heading-alignment heading-height\">\n          <Typography variant=\"h4\">Contact me</Typography>\n          <Typography className=\"primary-color\">get in touch</Typography>\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\">\n          <p className=\"section-heading\">Get in Touch</p>\n          <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dignissimos harum corporis fuga corrupti. Doloribus quis soluta nesciunt veritatis vitae nobis?</p>\n          {contactData.map((data) => {\n            return (\n              <Grid container alignItems=\"center\" className=\"contactData\" key={data.key}>\n                <Grid item xs={1}>\n                  <Icon icon={data.icon} className=\"contact-me-icons\" />\n                </Grid>\n                <Grid item xs={11}>\n                  <strong>{data.title}</strong>\n                  <p className=\"contact-value\">{data.value}</p>\n                </Grid>\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\">\n          <p className=\"section-heading\">Message Me</p>\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <TextField\n                id=\"name\"\n                label=\"Name\"\n                variant=\"outlined\"\n                required\n                error={errors[\"name\"]}\n                helperText={errors[\"name\"]}\n                fullWidth\n                autoComplete=\"name\"\n                value={name}\n                onChange={(event) => {\n                  setName(event.target.value);\n                  validate();\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                id=\"email\"\n                label=\"Email\"\n                required\n                error={errors[\"email\"]}\n                helperText={errors[\"email\"]}\n                fullWidth\n                autoComplete=\"Email\"\n                value={email}\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                  validate();\n                }}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"subject\"\n                label=\"Subject\"\n                variant=\"outlined\"\n                required\n                error={errors[\"subject\"]}\n                helperText={errors[\"subject\"]}\n                fullWidth\n                autoComplete=\"subject\"\n                value={subject}\n                onChange={(event) => {\n                  setSubject(event.target.value);\n                  validate();\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"msg\"\n                label=\"Message\"\n                variant=\"outlined\"\n                required\n                error={errors[\"msg\"]}\n                helperText={errors[\"msg\"]}\n                fullWidth\n                autoComplete=\"message\"\n                value={msg}\n                onChange={(event) => {\n                  setMsg(event.target.value);\n                  validate();\n                }}\n                multiline\n                rows={4}\n              />\n            </Grid>\n            <Grid item={12} className=\"btn-contaner\">\n              <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={saveTeacherData}>\n                <strong>Send message</strong>\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\">\n          <div>\n            <strong>Follow me on </strong>\n          </div>\n          {socialMediaData.map((data) => {\n            return (\n              <a href={data.link} key={data.key} style={{ textDecoration: \"none\" }}>\n                {\" \"}\n                <Icon icon={data.icon} className=\"socal-media-icons\" />\n              </a>\n            );\n          })}\n        </Grid>\n        <Grid item lg={5} md={5} sm={12} xs={12} className=\"side-spacing\"></Grid>\n      </Grid>\n      <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              <div className=\"dialog-contant\">Thank You for Messaging me</div>\n              <div className=\"dialog-contant\">\n                <InsertEmoticonIcon className=\"icon-style\" />\n              </div>\n            </DialogTitle>\n          </Grid>\n          <Grid item xs={12}>\n            <div className=\"dialog-contant\">\n              <p>I will contact you shortly.</p>\n            </div>\n          </Grid>\n        </Grid>\n        <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n            <strong>Okay</strong>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default ContactMe;\n","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":70,"column":75,"nodeType":"50","messageId":"51","endLine":70,"endColumn":76,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":70,"column":85,"nodeType":"50","messageId":"51","endLine":70,"endColumn":86,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["56","57"],["58","59"],"no-global-assign","no-unsafe-negation",{"messageId":"60","fix":"61","desc":"62"},{"messageId":"63","fix":"64","desc":"65"},{"messageId":"60","fix":"66","desc":"62"},{"messageId":"63","fix":"67","desc":"65"},"removeEscape",{"range":"68","text":"69"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"70","text":"71"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"72","text":"69"},{"range":"73","text":"71"},[2866,2867],"",[2866,2866],"\\",[2876,2877],[2876,2876]]