[{"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js":"1","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js":"2","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js":"3","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js":"4","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js":"5","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js":"6","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js":"7","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js":"8","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js":"9","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/Form.js":"10","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/top-bar/TopBar.js":"11"},{"size":500,"mtime":1625033088488,"results":"12","hashOfConfig":"13"},{"size":1488,"mtime":1632481602695,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1622111070152,"results":"15","hashOfConfig":"13"},{"size":3568,"mtime":1632482258380,"results":"16","hashOfConfig":"13"},{"size":2741,"mtime":1632479443746,"results":"17","hashOfConfig":"13"},{"size":2590,"mtime":1632482466115,"results":"18","hashOfConfig":"13"},{"size":3426,"mtime":1632299708520,"results":"19","hashOfConfig":"13"},{"size":3390,"mtime":1632407384868,"results":"20","hashOfConfig":"13"},{"size":555,"mtime":1631779086127,"results":"21","hashOfConfig":"13"},{"size":6722,"mtime":1632640043892,"results":"22","hashOfConfig":"13"},{"size":3763,"mtime":1632295808117,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eibo5x",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/index.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/App.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/reportWebVitals.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/about-me/AboutMe.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-services/MyServices.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-skills/MySkills.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/ContactMe.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/my-projects/MyProject.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/footer/Footer.js",[],"/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/contact-me/Form.js",["47","48"],"import React, { useState } from \"react\";\nimport \"./form.scss\";\nimport emailjs from \"emailjs-com\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { Button } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Icon } from \"@iconify/react\";\nimport send from \"@iconify-icons/mdi/send\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nfunction Form() {\n  const [open, setOpen] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [liveValidationStart] = useState(false);\n  const [flag, setFlag] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function sendEmail(e) {\n    e.preventDefault();\n    setName(\"\");\n    setEmail(\"\");\n    setMsg(\"\");\n    setSubject(\"\");\n    if (validateForm() === false) {\n      setFlag(true);\n      emailjs.sendForm(process.env.REACT_APP_DATA_SERVICE, process.env.REACT_APP_DATA_TEMPLATE, e.target, process.env.REACT_APP_DATA_ENV).then(\n        (result) => {\n          handleClickOpen();\n          setFlag(false);\n          console.log(result);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n    }\n  }\n\n  const validateForm = () => {\n    let errorValue = false;\n    let errors = {};\n    let requireFields = [\"name\", \"email\", \"subject\", \"msg\"];\n    let emailFields = [\"email\"];\n\n    requireFields.forEach((field, index) => {\n      if (document.getElementById(field) !== null) {\n        let value;\n        if (document.getElementById(field).value !== undefined) {\n          value = document.getElementById(field).value;\n        } else {\n          value = document.getElementById(field).innerHTML;\n          if (value === \"<span>â€‹</span>\") {\n            value = -1;\n          }\n        }\n        if (value.length < 1 || value === -1) {\n          errors[field] = \"*This field is required\";\n        } else if (emailFields.indexOf(field) !== -1 && !value.match(/^[\\w\\.=-]+@[\\w\\.-]+\\.[\\w]{2,3}$/)) {\n          errors[field] = \"*This field should be a valid email\";\n        } else if (email != null) {\n        }\n        if (errorValue === false) {\n        }\n      }\n    });\n    setErrors(errors);\n\n    return Object.keys(errors).length > 0 ? true : false;\n  };\n  const validate = () => {\n    if (liveValidationStart === false) {\n      validateForm();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"contact-form\" onSubmit={sendEmail}>\n        <div className=\"nameEmailContainer\">\n          <div className=\"nameContainer\">\n            <label className=\"heading-color\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Enter your name...\"\n              className={(errors[\"name\"] ? \"errorClass\" : \"\", \"hover-effect\")}\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n                validate();\n              }}\n            />\n            <small>{errors[\"name\"]}</small>\n          </div>\n          <div className=\"emailContainer\">\n            <label className=\"heading-color\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter your email...\"\n              id=\"email\"\n              className={(errors[\"email\"] ? \"errorClass\" : \"\", \"hover-effect\")}\n              onChange={(e) => {\n                setEmail(e.target.value);\n                validate();\n              }}\n            />\n            <small>{errors[\"email\"]}</small>\n          </div>\n        </div>\n        <label className=\"heading-color\">Subject</label>\n        <input\n          type=\"text\"\n          name=\"subject\"\n          value={subject}\n          placeholder=\"Enter the subject of this message...\"\n          id=\"subject\"\n          className={(errors[\"subject\"] ? \"errorClass\" : \"\", \"hover-effect\")}\n          onChange={(e) => {\n            setSubject(e.target.value);\n            validate();\n          }}\n        />\n        <small>{errors[\"subject\"]}</small>\n        <div className=\"messageContainer\">\n          <label className=\"heading-color\">Message</label>\n          <input\n            type=\"text\"\n            name=\"message\"\n            value={msg}\n            id=\"msg\"\n            placeholder=\"Type whatever you want...\"\n            className={(errors[\"msg\"] ? \"errorClass\" : \"\", \"hover-effect\")}\n            onChange={(e) => {\n              setMsg(e.target.value);\n              validate();\n            }}\n          />\n          <small>{errors[\"msg\"]}</small>\n        </div>\n        <div className=\"send-btn-container\">\n          <Button type=\"submit\" variant=\"contained\" className=\"send-btn hover-effect\" size=\"large\">\n            {flag === true ? (\n              <CircularProgress className=\"circular-progress\" />\n            ) : (\n              <strong className=\"icon-heading-container \">\n                Send message <Icon icon={send} style={{ marginLeft: \"10px\" }} />\n              </strong>\n            )}\n          </Button>\n        </div>\n      </form>\n      <Dialog open={open} TransitionComponent={Transition} keepMounted onClose={handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\n        <Grid container justify=\"center\" alignItems=\"center\" className=\"menu-container\">\n          <Grid item xs={12}>\n            <DialogTitle id=\"alert-dialog-slide-title\">\n              <div className=\"dialog-contant\">Thank You for Messaging me</div>\n              <div className=\"dialog-contant\">\n                <InsertEmoticonIcon className=\"icon-style\" />\n              </div>\n            </DialogTitle>\n          </Grid>\n          <Grid item xs={12}>\n            <div className=\"dialog-contant\">\n              <p>I will contact you shortly.</p>\n            </div>\n          </Grid>\n        </Grid>\n        <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }} className=\"menu-container\">\n          <Button onClick={handleClose} variant=\"contained\" color=\"secondary\">\n            <strong>Okay</strong>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Form;\n","/home/abhishek/Desktop/Abhishek-Parashar-Portfolio/src/top-bar/TopBar.js",[],{"ruleId":"49","severity":1,"message":"50","line":76,"column":75,"nodeType":"51","messageId":"52","endLine":76,"endColumn":76,"suggestions":"53"},{"ruleId":"49","severity":1,"message":"50","line":76,"column":85,"nodeType":"51","messageId":"52","endLine":76,"endColumn":86,"suggestions":"54"},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["55","56"],["57","58"],{"messageId":"59","fix":"60","desc":"61"},{"messageId":"62","fix":"63","desc":"64"},{"messageId":"59","fix":"65","desc":"61"},{"messageId":"62","fix":"66","desc":"64"},"removeEscape",{"range":"67","text":"68"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"69","text":"70"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"71","text":"68"},{"range":"72","text":"70"},[2507,2508],"",[2507,2507],"\\",[2517,2518],[2517,2517]]